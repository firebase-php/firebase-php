version: 2 # use CircleCI 2.0

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/php:7.2-node # ...with this image as the primary container; this is where all `steps` will run
    working_directory: ~/projects # directory where steps will run
    # CircleCI resource
    resource_class: small
    steps: # a set of executable commands
      - checkout
      - run: sudo apt install -y zlib1g-dev libicu-dev
      - run: |
          curl -O https://download.libsodium.org/libsodium/releases/libsodium-1.0.18-stable.tar.gz
          tar -zxvf libsodium-1.0.18-stable.tar.gz
          cd ./libsodium-stable
          ./configure
          make && make check
          sudo make install
      - run: sudo docker-php-ext-configure intl
      - run: sudo docker-php-ext-install zip intl
      - run: sudo pecl install grpc xdebug libsodium
      - run: sudo docker-php-ext-enable grpc xdebug zip sodium
      - run: sudo composer self-update
      - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-
      - run: composer install -n --prefer-dist
      - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - run:
          name: Running tests
          command: ./vendor/bin/phpunit --testsuite=unit
